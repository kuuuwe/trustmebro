build_site()
document()
check()
check()
library(devtools)
library(usethis)
library(testthat)
library(pkgdown)
load_all()
check()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- data.frame(
name = c("Alice", "Bob", "Charlie"),
description = c("Hello! This is a test string with numbers like 123 and special characters #$%.   Tabs:         ",
"This one has umlauts and spec!al char$cters...",
"Another sentence with @#$% special! characters and no numbers."),
stringsAsFactors = FALSE
)
# expected result
expected_df <- data.frame(
name = c("Alice", "Bob", "Charlie"),
description = c("Hello#Thisisateststringwithnumberslike123andspecialcharacters####Tabs#",
"Thisonehasumlautsandspec#alchar#cters###",
"Anothersentencewith####special#charactersandnonumbers#"),
stringsAsFactors = FALSE
)
# call function
df_modified <- replace_nonalnum_in_df(df, "#")
# test equal
expect_equal(df_modified, expected_df)
})
testdaten <- sailor_students
View(testdaten)
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, "#")
# test equal
expect_equal(df_modified, expected_df)
})
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, "#")
# test equal
expect_equal(df_modified, expected_df)
})
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, "sgic", replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, "sgic", replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT#2701", "MUK3801", "SAM10", "T0601",
"#UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sigc, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students
# expected result
expected_df <- tibble(
sigc = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006 ", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
# call function
df_modified <- replace_nonalnum_in_df(df, sigc, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
## code to prepare `sailor_students` dataset goes here
library(tibble)
sailor_students <- tibble(
sgic = c("MUC__0308", "HÄT 2701", "MUK3801", "SAM10", "T0601",
"      UIT3006 ", "@@@@@@", NA, " ", "MOA2210",
"MUK3801", "T0601"),
school = c(54321, 22345, 22345, 22345, 65432,
12345, NA, 12345, "unkown", 12345,
22345, 65432),
class = c("3-B ", "2-A", "  2-B", "3-B", "1-C",
"3-3", "3_2  ", "3@41", NA, " ",
"2-B", "1-C"),
gender = c("Male", "???", "Female", "Female  ", "Female",
NA, "Female", "   Female", "Female", "Female",
"Female", "Female"),
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA),
testscore_calculus = c(394, 123, 9485, 3, NA,
394, 2938, 3948, 205, 21,
934, 764))
usethis::use_data(sailor_students, overwrite = TRUE)
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
View(sailor_students)
load_all
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
load()
load_all()
#common cases
test_that("replace_nonalnum_in_df removes spaces and replaces non-alphanumeric characters", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC##0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "######", "#", "#", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
test_that("replace_nonalnum_in_df handles no character columns correctly", {
# data
df <- sailor_students %>% select(testscore_langauge)
# expected result
expected_df <- tibble(
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA))
# call function
df_modified <- replace_nonalnum_in_df(df, "#")
# test equal
expect_equal(df_modified, expected_df)
})
test_that("replace_nonalnum_in_df handles no character columns correctly", {
# data
df <- sailor_students %>% select(testscore_langauge)
# expected result
expected_df <- tibble(
testscore_langauge = c(425, 4596, 2456, 2345, 1234,
123, 56, 986, 284, 105,
9586, NA))
# call function
df_modified <- replace_nonalnum_in_df(df, replacement = "#")
# test equal
expect_equal(df_modified, expected_df)
})
test_that("replace_nonalnum_in_df allows custom replacement character", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC$$0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "$$$$$$", "$", "$", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- replace_nonalnum_in_df(df, sgic, replacement = "$")
# test equal
expect_equal(df_modified, expected_df)
})
test_that("replace_nonalnum_in_df canbe used with pipe operator", {
# data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC$$0308", "HÄT2701", "MUK3801", "SAM10", "T0601",
"UIT3006", "$$$$$$", "$", "$", "MOA2210",
"MUK3801", "T0601"))
# call function
df_modified <- df %>% replace_nonalnum_in_df(sgic, replacement = "$")
# test equal
expect_equal(df_modified, expected_df)
})
#edge cases
test_that("replace_nonalnum_in_df handles empty data frame correctly", {
# data empty
df <- data.frame(
name = character(0),
description = character(0),
stringsAsFactors = FALSE
)
# expected df
expected_df <- df
# call function
df_modified <- replace_nonalnum_in_df(df, replacement = "#")
# expect equal
expect_equal(df_modified, expected_df)
})
check()
load()
load_all()
document()
check()
document()
check()
check()
use_r("exclude_cases")
View(testdaten)
test <- sailor_students %>% distinct(sigc)
test <- sailor_students %>% distinct(sgic)
View(test)
View(sailor_students)
View(sailor_students)
document()
check()
load_all()
check()
use_test()
#common cases
test_that("exclude_cases correctly removes rows based on specified condition", {
#data
df <- sailor_students %>% select(sgic)
# expected result
expected_df <- tibble(
sgic = c("MUC__0308", "HÄT 2701", "SAM10", "T0601",
"      UIT3006 ", "@@@@@@", NA, " ", "MOA2210", "T0601"))
# call function
df_modified <- df %>% exclude_cases(distinct(sgic))
# test equal
expect_equal(df_modified, expected_df)
})
